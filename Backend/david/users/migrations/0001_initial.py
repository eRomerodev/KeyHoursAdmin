# Generated by Django 5.2.7 on 2025-10-09 22:56

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Scholarship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre de la Beca')),
                ('scholarship_type', models.CharField(choices=[('excellence', 'KEY EXCELLENCE'), ('merit', 'MERIT'), ('need', 'NECESIDAD')], max_length=20, verbose_name='Tipo de Beca')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('required_hours', models.PositiveIntegerField(verbose_name='Horas Requeridas por Año')),
                ('duration_years', models.PositiveIntegerField(default=1, verbose_name='Duración en Años')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activa')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Beca',
                'verbose_name_plural': 'Becas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('student', 'Estudiante'), ('admin', 'Administrador')], default='student', max_length=20, verbose_name='Tipo de Usuario')),
                ('carnet', models.CharField(help_text='Carnet del estudiante (ej: 20230001)', max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='El carnet debe contener solo letras mayúsculas y números', regex='^[A-Z0-9]+$')], verbose_name='Carnet')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Teléfono')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Fecha de Nacimiento')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/', verbose_name='Foto de Perfil')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserScholarship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Activa'), ('completed', 'Completada'), ('suspended', 'Suspendida'), ('cancelled', 'Cancelada')], default='active', max_length=20, verbose_name='Estado')),
                ('start_date', models.DateField(verbose_name='Fecha de Inicio')),
                ('end_date', models.DateField(verbose_name='Fecha de Fin')),
                ('current_year_hours', models.PositiveIntegerField(default=0, verbose_name='Horas del Año Actual')),
                ('total_hours_completed', models.PositiveIntegerField(default=0, verbose_name='Total de Horas Completadas')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scholarship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.scholarship', verbose_name='Beca')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scholarships', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Beca de Usuario',
                'verbose_name_plural': 'Becas de Usuarios',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'scholarship')},
            },
        ),
    ]
